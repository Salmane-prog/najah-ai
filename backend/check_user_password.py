#!/usr/bin/env python3
"""
Script pour v√©rifier le mot de passe de l'utilisateur
"""

import sqlite3
import hashlib

def check_user_password():
    """V√©rifie le mot de passe de l'utilisateur dans la base de donn√©es"""
    
    try:
        conn = sqlite3.connect("app.db")
        cursor = conn.cursor()
        
        # R√©cup√©rer l'utilisateur
        cursor.execute("""
            SELECT id, email, password, role, first_name, last_name 
            FROM users 
            WHERE email = 'teacher@example.com'
        """)
        
        user = cursor.fetchone()
        
        if user:
            user_id, email, stored_password, role, first_name, last_name = user
            
            print(f"üë§ Utilisateur trouv√©:")
            print(f"   ID: {user_id}")
            print(f"   Email: {email}")
            print(f"   R√¥le: {role}")
            print(f"   Nom: {first_name} {last_name}")
            print(f"   Mot de passe hash√©: {stored_password}")
            
            # Tester diff√©rents hashs
            test_password = "teacher123"
            
            # Hash SHA256
            sha256_hash = hashlib.sha256(test_password.encode()).hexdigest()
            print(f"\nüîç Test des hashs:")
            print(f"   Mot de passe test: {test_password}")
            print(f"   SHA256 hash: {sha256_hash}")
            print(f"   SHA256 match: {'‚úÖ' if sha256_hash == stored_password else '‚ùå'}")
            
            # Hash MD5
            md5_hash = hashlib.md5(test_password.encode()).hexdigest()
            print(f"   MD5 hash: {md5_hash}")
            print(f"   MD5 match: {'‚úÖ' if md5_hash == stored_password else '‚ùå'}")
            
            # Hash simple
            simple_hash = test_password
            print(f"   Simple match: {'‚úÖ' if simple_hash == stored_password else '‚ùå'}")
            
        else:
            print("‚ùå Utilisateur non trouv√©")
        
        conn.close()
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

def test_password_verification():
    """Teste la v√©rification du mot de passe avec diff√©rents algorithmes"""
    
    print("\nüß™ Test de v√©rification du mot de passe...")
    
    test_password = "teacher123"
    
    # Diff√©rents algorithmes de hash
    algorithms = {
        "SHA256": lambda p: hashlib.sha256(p.encode()).hexdigest(),
        "MD5": lambda p: hashlib.md5(p.encode()).hexdigest(),
        "Simple": lambda p: p
    }
    
    for name, hash_func in algorithms.items():
        hashed = hash_func(test_password)
        print(f"   {name}: {hashed}")

if __name__ == "__main__":
    print("üîç V√©rification du mot de passe de l'utilisateur")
    print("=" * 60)
    
    check_user_password()
    test_password_verification()
    
    print("\n‚úÖ V√©rification termin√©e") 