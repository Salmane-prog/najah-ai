#!/usr/bin/env python3
"""
Script pour initialiser les donn√©es du forum d'entraide
"""

from core.database import SessionLocal
from models.forum import ForumCategory, ForumThread, ForumReply
from models.user import User
from datetime import datetime
import json

def init_forum_data():
    db = SessionLocal()
    try:
        print("üöÄ Initialisation du forum d'entraide...")
        
        # Cr√©er les cat√©gories par d√©faut
        categories_data = [
            {
                "name": "Math√©matiques",
                "description": "Questions et discussions sur les math√©matiques",
                "subject": "Math√©matiques",
                "level": "Tous niveaux"
            },
            {
                "name": "Fran√ßais",
                "description": "Questions et discussions sur le fran√ßais",
                "subject": "Fran√ßais",
                "level": "Tous niveaux"
            },
            {
                "name": "Sciences",
                "description": "Questions et discussions sur les sciences",
                "subject": "Sciences",
                "level": "Tous niveaux"
            },
            {
                "name": "Histoire",
                "description": "Questions et discussions sur l'histoire",
                "subject": "Histoire",
                "level": "Tous niveaux"
            },
            {
                "name": "G√©n√©ral",
                "description": "Questions g√©n√©rales et discussions diverses",
                "subject": "G√©n√©ral",
                "level": "Tous niveaux"
            }
        ]
        
        # Cr√©er ou r√©cup√©rer les cat√©gories
        categories = {}
        for cat_data in categories_data:
            existing = db.query(ForumCategory).filter(ForumCategory.name == cat_data["name"]).first()
            if existing:
                categories[cat_data["name"]] = existing
                print(f"‚úÖ Cat√©gorie '{cat_data['name']}' d√©j√† existante")
            else:
                category = ForumCategory(**cat_data)
                db.add(category)
                db.commit()
                db.refresh(category)
                categories[cat_data["name"]] = category
                print(f"‚úÖ Cat√©gorie '{cat_data['name']}' cr√©√©e")
        
        # R√©cup√©rer un utilisateur √©tudiant pour cr√©er des exemples
        student = db.query(User).filter(User.role == "student").first()
        if not student:
            print("‚ùå Aucun √©tudiant trouv√© pour cr√©er des exemples")
            return
        
        # Cr√©er quelques threads d'exemple
        example_threads = [
            {
                "title": "Aide avec les √©quations du second degr√©",
                "content": "Bonjour ! J'ai du mal √† comprendre comment r√©soudre les √©quations du type ax¬≤ + bx + c = 0. Pouvez-vous m'expliquer la m√©thode du discriminant ?",
                "category": "Math√©matiques",
                "tags": json.dumps(["√©quations", "second degr√©", "discriminant"])
            },
            {
                "title": "Conjugaison du verbe 'avoir'",
                "content": "Je voudrais r√©viser la conjugaison du verbe 'avoir' au pr√©sent. Quelqu'un peut-il me donner un rappel ?",
                "category": "Fran√ßais",
                "tags": json.dumps(["conjugaison", "verbe avoir", "pr√©sent"])
            },
            {
                "title": "Photosynth√®se : explication simple",
                "content": "Quelqu'un peut-il m'expliquer simplement le processus de photosynth√®se ? Je ne comprends pas bien comment les plantes produisent leur nourriture.",
                "category": "Sciences",
                "tags": json.dumps(["photosynth√®se", "plantes", "biologie"])
            }
        ]
        
        for thread_data in example_threads:
            # V√©rifier si le thread existe d√©j√†
            existing = db.query(ForumThread).filter(
                ForumThread.title == thread_data["title"],
                ForumThread.author_id == student.id
            ).first()
            
            if existing:
                print(f"‚úÖ Thread '{thread_data['title']}' d√©j√† existant")
                continue
            
            # Cr√©er le thread
            thread = ForumThread(
                title=thread_data["title"],
                content=thread_data["content"],
                category_id=categories[thread_data["category"]].id,
                author_id=student.id,
                tags=thread_data["tags"]
            )
            
            db.add(thread)
            db.commit()
            db.refresh(thread)
            
            # Cr√©er une r√©ponse d'exemple
            reply = ForumReply(
                thread_id=thread.id,
                author_id=student.id,
                content="Voici un exemple de r√©ponse pour vous aider ! N'h√©sitez pas √† poser d'autres questions."
            )
            
            db.add(reply)
            db.commit()
            
            print(f"‚úÖ Thread '{thread_data['title']}' cr√©√© avec une r√©ponse")
        
        print("üéâ Initialisation du forum termin√©e avec succ√®s !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'initialisation: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    init_forum_data()
