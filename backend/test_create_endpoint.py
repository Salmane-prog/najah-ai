#!/usr/bin/env python3
"""
Script pour tester l'endpoint de cr√©ation de test
"""

import requests
import json
import os

def test_create_endpoint():
    print("üß™ Test de l'endpoint de cr√©ation de test")
    print("=" * 60)
    
    # URL de l'API
    base_url = "http://localhost:8000"
    
    # Donn√©es du test √† cr√©er
    test_data = {
        "title": "Test Cr√©√© par Script - " + str(int(os.urandom(4).hex(), 16)),
        "subject": "Test",
        "description": "Test de cr√©ation via script",
        "difficulty_min": 1,
        "difficulty_max": 5,
        "estimated_duration": 15,
        "adaptation_type": "difficulty",
        "learning_objectives": "Tester la cr√©ation",
        "is_active": True
    }
    
    print(f"üìù Donn√©es du test:")
    for key, value in test_data.items():
        print(f"  {key}: {value}")
    
    try:
        # Test 1: V√©rifier si l'API est accessible
        print(f"\nüîç Test 1: V√©rifier l'API")
        response = requests.get(f"{base_url}/docs")
        if response.status_code == 200:
            print("  ‚úÖ API accessible")
        else:
            print(f"  ‚ùå API non accessible: {response.status_code}")
            return
        
        # Test 2: Essayer de cr√©er un test
        print(f"\nüîç Test 2: Cr√©er un test")
        print(f"  URL: {base_url}/api/v1/adaptive-evaluation/tests/")
        print(f"  M√©thode: POST")
        print(f"  Donn√©es: {json.dumps(test_data, indent=2)}")
        
        # Note: On ne peut pas vraiment tester sans authentification
        # Mais on peut v√©rifier que l'endpoint existe
        print(f"\n‚ö†Ô∏è  Note: L'endpoint n√©cessite une authentification")
        print(f"   Pour tester compl√®tement, il faut:")
        print(f"   1. D√©marrer le backend")
        print(f"   2. Se connecter via le frontend")
        print(f"   3. Cliquer sur 'Cr√©er un test'")
        print(f"   4. V√©rifier la base de donn√©es")
        
    except requests.exceptions.ConnectionError:
        print(f"‚ùå Impossible de se connecter √† {base_url}")
        print(f"   V√©rifiez que le backend est d√©marr√©")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

if __name__ == "__main__":
    test_create_endpoint()


















