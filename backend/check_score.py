#!/usr/bin/env python3
import sqlite3

def check_quiz_score():
    """V√©rifier le score du quiz 52"""
    
    try:
        conn = sqlite3.connect('data/app.db')
        cursor = conn.cursor()
        
        print("üîç V√âRIFICATION DU SCORE DU QUIZ 52")
        print("=" * 50)
        
        # 1. V√©rifier la tentative de test
        print("\nüìã TENTATIVE DE TEST:")
        cursor.execute("""
            SELECT id, test_id, student_id, total_score, max_score, status, completed_at 
            FROM test_attempts 
            WHERE test_id = 52 
            ORDER BY id DESC 
            LIMIT 1
        """)
        
        attempt = cursor.fetchone()
        if attempt:
            print(f"  ‚úÖ Tentative trouv√©e:")
            print(f"     - ID: {attempt[0]}")
            print(f"     - Test ID: {attempt[1]}")
            print(f"     - √âtudiant: {attempt[2]}")
            print(f"     - Score: {attempt[3]}/{attempt[4]}")
            print(f"     - Status: {attempt[5]}")
            print(f"     - Termin√©: {attempt[6]}")
        else:
            print("  ‚ùå Aucune tentative trouv√©e pour le test 52")
            return
        
        # 2. V√©rifier les r√©ponses aux questions
        print("\n‚ùì R√âPONSES AUX QUESTIONS:")
        cursor.execute("""
            SELECT id, question_id, student_answer, is_correct, score
            FROM question_responses 
            WHERE attempt_id = ?
            ORDER BY question_id
        """, (attempt[0],))
        
        responses = cursor.fetchall()
        if responses:
            print(f"  ‚úÖ {len(responses)} r√©ponses trouv√©es:")
            total_score = 0
            for resp in responses:
                print(f"     - Question {resp[1]}: '{resp[2]}' (Correct: {resp[3]}, Score: {resp[4]})")
                total_score += resp[4]
            print(f"     - Score total calcul√©: {total_score}")
        else:
            print("  ‚ùå Aucune r√©ponse trouv√©e")
        
        # 3. V√©rifier les questions du test
        print("\nüìù QUESTIONS DU TEST:")
        cursor.execute("""
            SELECT id, question_text, correct_answer, difficulty_level
            FROM adaptive_questions 
            WHERE test_id = 52 
            ORDER BY question_order
        """)
        
        questions = cursor.fetchall()
        if questions:
            print(f"  ‚úÖ {len(questions)} questions trouv√©es:")
            for q in questions:
                print(f"     - ID {q[0]}: {q[1][:50]}... (Correct: {q[2]}, Niveau: {q[3]})")
        else:
            print("  ‚ùå Aucune question trouv√©e pour le test 52")
        
        conn.close()
        print("\n‚úÖ V√©rification termin√©e")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la v√©rification: {e}")

if __name__ == "__main__":
    check_quiz_score()











