#!/usr/bin/env python3
"""
Script pour ajouter la colonne created_by manquante
"""

import sqlite3
import os

def add_created_by_column():
    # Chemin vers la base de donn√©es
    db_path = "data/app.db"
    
    print("=== AJOUT DE LA COLONNE CREATED_BY ===")
    
    if not os.path.exists(db_path):
        print(f"‚ùå ERREUR: Base de donn√©es non trouv√©e: {db_path}")
        return
    
    # Connexion √† la base de donn√©es
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        print("1. V√©rification de la colonne created_by...")
        
        # V√©rifier les colonnes existantes
        cursor.execute("PRAGMA table_info(contents)")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        if 'created_by' in column_names:
            print("‚úÖ La colonne 'created_by' existe d√©j√†")
        else:
            print("‚ùå La colonne 'created_by' n'existe pas")
            print("Ajout de la colonne 'created_by'...")
            cursor.execute("ALTER TABLE contents ADD COLUMN created_by INTEGER")
            print("‚úÖ Colonne 'created_by' ajout√©e!")
        
        print("\n2. Mise √† jour des donn√©es existantes...")
        
        # Mettre √† jour les enregistrements existants avec une valeur par d√©faut
        cursor.execute("UPDATE contents SET created_by = 1 WHERE created_by IS NULL")
        print("‚úÖ Donn√©es mises √† jour!")
        
        print("\n3. V√©rification finale...")
        
        # V√©rifier les colonnes finales
        cursor.execute("PRAGMA table_info(contents)")
        final_columns = cursor.fetchall()
        print(f"Nombre total de colonnes: {len(final_columns)}")
        
        # Afficher toutes les colonnes
        print("Colonnes finales:")
        for col in final_columns:
            print(f"  - {col[1]} ({col[2]})")
        
        # Test de requ√™te
        cursor.execute("SELECT COUNT(*) FROM contents")
        count = cursor.fetchone()[0]
        print(f"Nombre d'enregistrements: {count}")
        
        if count > 0:
            cursor.execute("SELECT id, title, created_by FROM contents LIMIT 3")
            rows = cursor.fetchall()
            print("Exemples d'enregistrements:")
            for row in rows:
                print(f"  - ID: {row[0]}, Title: {row[1]}, Created_by: {row[2]}")
        
        conn.commit()
        print("\nüéâ Colonne created_by ajout√©e avec succ√®s!")
        
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    add_created_by_column() 