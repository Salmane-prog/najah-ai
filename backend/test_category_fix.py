#!/usr/bin/env python3
"""
Script pour tester la correction de la cat√©gorie
"""

import requests
import json

def test_category_fix():
    """Tester la correction de la cat√©gorie"""
    base_url = "http://localhost:8000"
    
    try:
        print("üß™ TEST DE CORRECTION DE LA CAT√âGORIE")
        print("=" * 50)
        
        # Test 1: R√©cup√©rer les cat√©gories disponibles
        print("\n1. R√©cup√©ration des cat√©gories disponibles...")
        response = requests.get(f"{base_url}/forum/categories")
        if response.status_code == 200:
            categories = response.json()
            print(f"   ‚úÖ {len(categories)} cat√©gories trouv√©es:")
            for cat in categories:
                print(f"      - ID: {cat['id']}, Nom: {cat['name']}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
            return
        
        # Test 2: Cr√©er un nouveau thread avec cat√©gorie "Sciences"
        print("\n2. Cr√©ation d'un nouveau thread avec cat√©gorie 'Sciences'...")
        thread_data = {
            "title": "Test correction cat√©gorie - Sciences",
            "content": "Ce thread teste la correction de la cat√©gorie. Il devrait rester dans la cat√©gorie Sciences apr√®s actualisation.",
            "category_id": 2,  # ID de la cat√©gorie Sciences
            "tags": ["test", "cat√©gorie", "sciences"]
        }
        
        response = requests.post(f"{base_url}/forum/threads/test", json=thread_data)
        if response.status_code == 200:
            result = response.json()
            print("   ‚úÖ Thread cr√©√© avec succ√®s!")
            print(f"      - ID: {result['id']}")
            print(f"      - Titre: {result['title']}")
            print(f"      - Cat√©gorie: {result['category']}")
            print(f"      - Cat√©gorie ID: {thread_data['category_id']}")
        else:
            print(f"   ‚ùå Erreur: {response.status_code} - {response.text}")
            return
        
        # Test 3: R√©cup√©rer tous les threads et v√©rifier la cat√©gorie
        print("\n3. V√©rification de la cat√©gorie apr√®s cr√©ation...")
        response = requests.get(f"{base_url}/forum/threads")
        if response.status_code == 200:
            threads = response.json()
            print(f"   ‚úÖ {len(threads)} threads r√©cup√©r√©s")
            
            # Chercher le thread cr√©√©
            created_thread = None
            for thread in threads:
                if thread['title'] == "Test correction cat√©gorie - Sciences":
                    created_thread = thread
                    break
            
            if created_thread:
                print(f"   ‚úÖ Thread trouv√©!")
                print(f"      - ID: {created_thread['id']}")
                print(f"      - Titre: {created_thread['title']}")
                print(f"      - Cat√©gorie: {created_thread['category']}")
                
                if created_thread['category'] == "Sciences":
                    print("   ‚úÖ SUCC√àS: La cat√©gorie est correctement conserv√©e!")
                else:
                    print(f"   ‚ùå ERREUR: La cat√©gorie devrait √™tre 'Sciences' mais est '{created_thread['category']}'")
            else:
                print("   ‚ùå Thread cr√©√© non trouv√© dans la liste")
        else:
            print(f"   ‚ùå Erreur: {response.status_code}")
        
        print("\n" + "=" * 50)
        print("üéâ TEST DE CORRECTION TERMIN√â!")
        
    except Exception as e:
        print(f"‚ùå Erreur lors du test: {e}")

if __name__ == "__main__":
    test_category_fix() 