#!/usr/bin/env python3
"""
Script pour corriger la table notifications en ajoutant les colonnes manquantes
"""

import sqlite3
import os

def fix_notifications_table():
    """Ajouter les colonnes manquantes √† la table notifications"""
    
    # Chemin vers la base de donn√©es
    db_path = "F:/IMT/stage/Yancode/Najah__AI/data/app.db"
    
    if not os.path.exists(db_path):
        print(f"‚ùå Base de donn√©es non trouv√©e: {db_path}")
        return
    
    try:
        # Connexion √† la base de donn√©es
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("üîß Correction de la table notifications...")
        
        # V√©rifier si les colonnes existent d√©j√†
        cursor.execute("PRAGMA table_info(notifications)")
        columns = [column[1] for column in cursor.fetchall()]
        
        # Ajouter la colonne icon si elle n'existe pas
        if 'icon' not in columns:
            print("‚ûï Ajout de la colonne 'icon'...")
            cursor.execute("ALTER TABLE notifications ADD COLUMN icon VARCHAR(50)")
            print("‚úÖ Colonne 'icon' ajout√©e")
        else:
            print("‚úÖ Colonne 'icon' existe d√©j√†")
        
        # Ajouter la colonne points_reward si elle n'existe pas
        if 'points_reward' not in columns:
            print("‚ûï Ajout de la colonne 'points_reward'...")
            cursor.execute("ALTER TABLE notifications ADD COLUMN points_reward INTEGER DEFAULT 0")
            print("‚úÖ Colonne 'points_reward' ajout√©e")
        else:
            print("‚úÖ Colonne 'points_reward' existe d√©j√†")
        
        # V√©rifier la structure finale
        cursor.execute("PRAGMA table_info(notifications)")
        final_columns = [column[1] for column in cursor.fetchall()]
        print(f"üìã Colonnes finales: {final_columns}")
        
        # Valider les changements
        conn.commit()
        print("‚úÖ Table notifications corrig√©e avec succ√®s !")
        
    except Exception as e:
        print(f"‚ùå Erreur lors de la correction: {str(e)}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    fix_notifications_table() 